000000000010005b:obj/arch/i686/random.c:srand(uint32_t s)
0000000000100102:obj/arch/i686/random.c:rand(void)
0000000000100126:obj/arch/i686/gdt.c:gdt_set_entry(int index, uint32 base, uint32 limit, uint8 access, uint8 gran)
00000000001001b1:obj/arch/i686/gdt.c:gdt_init(void)
0000000000100250:obj/arch/i686/idt.c:idt_set_entry(int index, uint32 base, uint16 seg_sel, uint8 flags)
00000000001002b1:obj/arch/i686/idt.c:idt_init(void)
000000000010074e:obj/arch/i686/system.c:populate_cpu_info(cpu_info_t *info)
0000000000100a0e:obj/arch/i686/system.c:populate_system_info(system_info_t *sys_info)
0000000000100aa3:obj/arch/i686/system.c:init_system_info(void)
0000000000100abc:obj/arch/i686/io_ports.c:inportb(uint16 port)
0000000000100ad9:obj/arch/i686/io_ports.c:outportb(uint16 port, uint8 val)
0000000000100afa:obj/arch/i686/io_ports.c:inports(uint16 port)
0000000000100b19:obj/arch/i686/io_ports.c:outports(uint16 port, uint16 data)
0000000000100b3a:obj/arch/i686/io_ports.c:inportl(uint16 port)
0000000000100b56:obj/arch/i686/io_ports.c:outportl(uint16 port, uint32 data)
0000000000100b6e:obj/arch/i686/io_ports.c:write_to_com1(uint8 data)
0000000000100b8f:obj/arch/i686/io_ports.c:write_to_com1_string(char *s)
0000000000100bd9:obj/arch/i686/io_ports.c:printf_error(const char *format, ...)
0000000000100c33:obj/arch/i686/io_ports.c:printf_com(const char* format, ...)
0000000000100c78:obj/arch/i686/io_ports.c:configure_com1(uint16 baud_rate, uint8 data_bits, uint8 stop_bits, uint8 parity)
0000000000100d33:obj/arch/i686/io_ports.c:init_com1(void)
0000000000100d56:obj/arch/i686/io_ports.c:cpuid(unsigned int code, unsigned int *a, unsigned int *b,
                         unsigned int *c, unsigned int *d)
0000000000100d7b:obj/arch/i686/io_ports.c:get_cpu_name(char *cpu_name)
0000000000100e65:obj/arch/i686/io_ports.c:get_cpu_info(char *cpu_name, char *architecture, unsigned int *family,
                  unsigned int *model, unsigned int *stepping)
00000000001010be:obj/arch/i686/bios32.c:bios32_init(void)
000000000010111d:obj/arch/i686/bios32.c:bios32_service(void)
0000000000101232:obj/arch/i686/bios32.c:int86(uint8 interrupt, REGISTERS16 *in, REGISTERS16 *out)
0000000000101257:obj/arch/i686/isr.c:isr_register_interrupt_handler(int num, ISR handler,char func[255])
00000000001012b2:obj/arch/i686/isr.c:isr_end_interrupt(int num)
00000000001012cd:obj/arch/i686/isr.c:isr_irq_handler(REGISTERS *reg)
00000000001013f5:obj/arch/i686/isr.c:debug_output(REGISTERS *reg)
000000000010145a:obj/arch/i686/isr.c:isr_exception_handler(REGISTERS reg)
00000000001014e6:obj/arch/i686/8259_pic.c:pic8259_init(void)
00000000001015b7:obj/arch/i686/8259_pic.c:pic8259_eoi(uint8 irq)
000000000010178f:obj/kernel/multitasking/scheduler.c:InitScheduler(void)
0000000000101855:obj/kernel/multitasking/scheduler.c:PcbAlloc(void)
00000000001018c1:obj/kernel/multitasking/scheduler.c:PcbFree(PCB_t *pcb)
00000000001018f3:obj/kernel/multitasking/scheduler.c:AddReady(PCB_t *task)
0000000000101945:obj/kernel/multitasking/scheduler.c:NextReady(void)
0000000000101992:obj/kernel/multitasking/scheduler.c:CreateProcess(void (*ent)
0000000000101a4a:obj/kernel/multitasking/scheduler.c:Schedule(void)
0000000000101aeb:obj/kernel/multitasking/scheduler.c:UpdateTimeUsed(void)
0000000000101b43:obj/kernel/multitasking/scheduler.c:LockScheduler(void)
0000000000101b57:obj/kernel/multitasking/scheduler.c:UnlockScheduler(void)
0000000000101b74:obj/kernel/multitasking/scheduler.c:LockAndPostpone(void)
0000000000101b8c:obj/kernel/multitasking/scheduler.c:UnlockAndSchedule(void)
0000000000101bc7:obj/kernel/multitasking/scheduler.c:BlockProcess(int reason)
0000000000101bea:obj/kernel/multitasking/scheduler.c:UnblockProcess(PCB_t *proc)
0000000000101c08:obj/kernel/multitasking/scheduler.c:AddSleeping(PCB_t *task)
0000000000101c50:obj/kernel/multitasking/scheduler.c:SleepUntil(unsigned long when)
0000000000101c9c:obj/kernel/multitasking/scheduler.c:IrqTimerHandler(void)
0000000000101d4a:obj/kernel/multitasking/scheduler.c:AddTerminated(PCB_t *task)
0000000000101d92:obj/kernel/multitasking/scheduler.c:TerminateProcess(void)
0000000000101dd1:obj/kernel/multitasking/scheduler.c:PerformButler(void)
0000000000101e36:obj/kernel/multitasking/scheduler.c:GetCurrentTask(void)
0000000000101e46:obj/kernel/multitasking/cpu.c:InitTimer(void)
0000000000101e4c:obj/kernel/multitasking/cpu.c:GetCurrentCounter(void)
0000000000101ff8:obj/kernel/elf/elf_exe.c:run_elf(struct elf_exe elf, int myArgc,char* myArgv[])
0000000000102050:obj/kernel/elf/elf_exe.c:check_overlap(uintptr_t kernel_start, uintptr_t kernel_end, Elf32_Ehdr* elf_header)
000000000010208c:obj/kernel/elf/elf_exe.c:save_register_state(RegisterState* state)
00000000001020a1:obj/kernel/elf/elf_exe.c:restore_register_state(RegisterState* state)
00000000001020b6:obj/kernel/elf/elf_exe.c:is_kernel_memory_overlap(Elf32_Phdr* segment)
000000000010210c:obj/kernel/elf/elf_exe.c:switch_to_user_mode(UserProcessContext *user_context, KernelContext *kernel_context)
000000000010212f:obj/kernel/elf/elf_exe.c:load_elf_executable(uint8_t* elf_data, int myArgc, char** myArgv)
000000000010254f:obj/kernel/elf/elf_exe.c:exit_elf(KernelContext* location)
000000000010255c:obj/kernel/elf/elf_exe.c:load_elf_file(const char* filename, int argc, char **argv)
000000000010265f:obj/kernel/elf/elf_exe.c:execute_file(const char *path,int argc, char **argv)
00000000001026ac:obj/kernel/elf/elf_exe.c:internal_run_exe(void)
00000000001028e4:obj/kernel/cmd/text_editor.c:edit_file(char *file_path)
0000000000102cfc:obj/kernel/cmd/command.c:parse_command(char* cmd_line, int* argc)
0000000000102f5d:obj/kernel/cmd/command.c:cls(void)
0000000000102f85:obj/kernel/cmd/command.c:move_back_one_folder(char* path)
0000000000103058:obj/kernel/cmd/command.c:free_command(char** argv, int argc)
00000000001030bd:obj/kernel/cmd/command.c:set_cwd(char *path)
00000000001031b6:obj/kernel/cmd/command.c:help(void)
000000000010328f:obj/kernel/cmd/command.c:get_cwd(void)
00000000001032b8:obj/kernel/cmd/command.c:ls(void)
000000000010331d:obj/kernel/cmd/command.c:date(void)
0000000000103323:obj/kernel/cmd/command.c:draw_kmap(void)
000000000010333c:obj/kernel/cmd/command.c:shutdown(void)
0000000000103354:obj/kernel/cmd/command.c:key_map(void)
00000000001033cd:obj/kernel/cmd/command.c:print_iris(void)
0000000000103466:obj/kernel/cmd/command.c:get_primary_dev_num(const char *path)
000000000010349b:obj/kernel/cmd/command.c:get_path_without_dev(const char *path)
00000000001034c4:obj/kernel/cmd/command.c:cmd(char *command)
000000000010404a:obj/kernel/cmd/command.c:loop_test(void)
0000000000104220:obj/kernel/log/log.c:logging(int log_level,int line, char *function, char *path,const char* format, ...)
00000000001043b0:obj/kernel/kheap/kheap.c:init_kheap(uint32_t size)
00000000001044ab:obj/kernel/kheap/kheap.c:print_node_info(const Node *node)
000000000010463c:obj/kernel/kheap/kheap.c:init_memory_allocation(zone,num_pages_40_percent*PAGE_SIZE)
000000000010466e:obj/kernel/kheap/kheap.c:sys_allocate_memory(sizeof(MemoryAllocationInfo)
00000000001046e9:obj/kernel/kheap/kheap.c:sys_free_memory(const void *addr)
00000000001047c6:obj/kernel/kheap/kheap.c:sys_reallocate_memory(void *addr, int old_size, int new_size)
00000000001048ad:obj/kernel/kheap/kheap.c:print_memory_info(void)
0000000000104b18:obj/kernel/kheap/kheap.c:init_memory_region(start_addr, size)
0000000000104d65:obj/kernel/kheap/kheap.c:extend_allocation_space(void *extra_region, size_t size)
0000000000104db0:obj/kernel/kheap/kheap.c:get_memory_size(addr)
0000000000104e30:obj/kernel/kheap/kheap.c:memcleanup(void)
0000000000104e91:obj/kernel/kheap/kheap.c:buffer_overflow_detector(void)
0000000000104f89:obj/kernel/kheap/kheap.c:memory_leak_detector(void)
0000000000105021:obj/kernel/kheap/kheap.c:find_dangling_pointer(void)
00000000001050db:obj/kernel/kheap/kheap.c:run_checks(void)
00000000001050fc:obj/kernel/kheap/kheap.c:is_heap_active(void)
000000000010510b:obj/kernel/kheap/kheap.c:kmalloc(size_t size)
000000000010515f:obj/kernel/kheap/kheap.c:kfree(void *ptr)
0000000000105194:obj/kernel/kheap/kheap.c:find_free_zone(current_node,size,num_blocks_needed)
0000000000105274:obj/kernel/kheap/kheap.c:create_map(void)
0000000000105398:obj/kernel/kheap/kheap.c:print_allocated(void)
00000000001053e0:obj/kernel/kheap/stdlib.c:init_allocation_system(void)
0000000000105420:obj/kernel/kheap/stdlib.c:calloc(size_t num_elements, size_t element_size)
000000000010546c:obj/kernel/kheap/stdlib.c:malloc_wrap(size_t size, char function[1000])
00000000001054bd:obj/kernel/kheap/stdlib.c:malloc_int(1024*10)
000000000010552a:obj/kernel/kheap/stdlib.c:free(void *ptr)
00000000001055ee:obj/kernel/kheap/stdlib.c:realloc(void* ptr, size_t new_size)
0000000000105792:obj/kernel/kheap/stdlib.c:kheap_shutdown(void)
00000000001057cd:obj/kernel/kheap/stdlib.c:strtol(const char* str, char** endptr, int base)
0000000000105919:obj/kernel/kheap/stdlib.c:ldexp(double x, int exp)
0000000000105946:obj/kernel/vmm/vmm.c:init_vmm(void)
0000000000105b99:obj/kernel/vmm/vmm.c:switch_page_directory(&kernel_directory)
0000000000105baf:obj/kernel/vmm/vmm.c:map(void)
0000000000105c90:obj/kernel/vmm/vmm.c:unmap(uint32_t va)
0000000000105cbe:obj/kernel/vmm/vmm.c:get_mapping(uint32_t va, uint32_t* pa)
0000000000105d45:obj/kernel/vmm/vmm.c:find_free_range(uint32_t va_start, uint32_t va_end, uint32_t size,
		uint8_t size_aligned)
0000000000105dea:obj/kernel/vmm/vmm.c:allocate_range(uint32_t va_start, uint32_t va_end, uint32_t flags)
0000000000106018:obj/kernel/vmm/vmm.c:clone_directory(page_directory_t* src_dir)
000000000010625e:obj/kernel/vmm/vmm.c:destroy_directory(page_directory_t* dir)
00000000001063b0:obj/kernel/vmm/vmm.c:diff_directories(page_directory_t* adir, page_directory_t* bdir)
00000000001064dd:obj/kernel/vmm/vmm.c:page_fault(REGISTERS *regs)
000000000010655e:obj/kernel/vmm/vmm.c:sys_allocate_virtual_memory(uint32_t va, uint32_t size, uint32_t flags)
00000000001065cb:obj/kernel/debug/debug.c:print_kernel_memory_map(KERNEL_MEMORY_MAP *memory_map)
00000000001067cb:obj/kernel/debug/debug.c:disable_verbose(void)
00000000001067dc:obj/kernel/debug/debug.c:printf_t(const char *format, ...)
0000000000106808:obj/kernel/debug/debug.c:walk_stack(struct stackframe *stk)
00000000001068e6:obj/kernel/debug/debug.c:find_function(const char *buffer, size_t buffer_size, unsigned int address)
0000000000106a2c:obj/kernel/debug/debug.c:strnlen(const char *str, size_t max_len)
0000000000106a5b:obj/kernel/debug/debug.c:strndup(const char *str, size_t n)
0000000000106ab6:obj/kernel/debug/debug.c:unwind_stack(REGISTERS *reg)
0000000000106c06:obj/kernel/debug/debug_term.c:printf_debug(const char *fmt, ...)
0000000000106cc8:obj/kernel/debug/debug_term.c:init_debug_terminal(int x, int y)
0000000000106cf6:obj/kernel/debug/debug_term.c:get_debug_terminal_postion_x(void)
0000000000106d00:obj/kernel/debug/debug_term.c:get_debug_terminal_postion_y(void)
0000000000106d0a:obj/kernel/debug/debug_term.c:set_debug_terminal_postion_x(int x)
0000000000106d18:obj/kernel/debug/debug_term.c:set_debug_terminal_postion_y(int y)
0000000000106d26:obj/kernel/debug/debug_term.c:draw__debug_vbe_char(buffer[i])
0000000000106ebb:obj/kernel/debug/debug_term.c:draw__debug_char_8x16(debug_terminal_postion_x, debug_terminal_postion_y, c)
0000000000106f88:obj/kernel/debug/debug_term.c:kernel_panic(char *caller, char *reason)
0000000000106fbb:obj/kernel/pmm/pmm.c:init_pmm_page(uint32_t pmm_start,size_t size)
0000000000106ff2:obj/kernel/pmm/pmm.c:pmm_alloc_page(void)
0000000000107072:obj/kernel/pmm/pmm.c:pmm_free_page(uint32_t p)
0000000000107100:obj/kernel/pmm/pmm.c:pmm_collect_pages(MULTIBOOT_INFO* mboot_ptr)
000000000010717b:obj/kernel/pmm/pmm.c:pmm_alloc_pages(uint32_t num_pages)
000000000010738b:obj/kernel/kernel.c:Process(void)
0000000000107407:obj/kernel/kernel.c:cursor_flash(void)
0000000000107446:obj/kernel/kernel.c:get_kernel_memory_map(KERNEL_MEMORY_MAP *kmap, MULTIBOOT_INFO *mboot_info)
00000000001075c1:obj/kernel/kernel.c:kmain(unsigned long magic, unsigned long addr)
00000000001075db:obj/kernel/kernel.c:load_history_up(void)
00000000001076bc:obj/kernel/kernel.c:load_history_down(void)
000000000010779d:obj/kernel/kernel.c:command_line(void)
0000000000107abd:obj/kernel/kernel.c:check_buffer(char *string)
0000000000107b1d:obj/kernel/kernel.c:dev_0(void)
0000000000107b30:obj/kernel/kernel.c:dev_2(void)
0000000000107b40:obj/kernel/kernel.c:dev_3(void)
0000000000107b4e:obj/kernel/kernel.c:dev_4(void)
0000000000107d09:obj/kernel/init/main.c:store_modules(MULTIBOOT_INFO *mboot_info, MULTIBOOT_MODULE *stored_modules)
0000000000107dfe:obj/kernel/init/main.c:print_ram_size(uint64_t ram_size_kb)
0000000000107f9d:obj/kernel/init/main.c:write_first_module_to_file(MULTIBOOT_INFO *mboot_info)
0000000000108056:obj/kernel/init/main.c:draw_screen_dimensions_selection_menu(int pos,int *width,int *height)
000000000010827c:obj/kernel/init/main.c:set_screen_dimensions(int *width,int *hight)
000000000010833f:obj/kernel/init/main.c:init(unsigned long magic, unsigned long addr)
0000000000108f1d:obj/kernel/init/main.c:fill_program_list(int num_programs,Entry *entries)
0000000000109025:obj/kernel/init/main.c:print_pci_devices(void)
00000000001094fa:obj/kernel/init/main.c:load_boot_config(ini_data, &config)
0000000000109558:obj/kernel/init/main.c:call_interrupt_43(void)
0000000000109560:obj/kernel/init/main.c:edit_init(ini_data,"","","")
0000000000109883:obj/kernel/init/ini.c:ini_malloc(size_t size)
0000000000109a04:obj/kernel/init/ini.c:ini_parse_stream(ini_reader reader, void* stream, ini_handler handler,
                     void* user)
0000000000109d0f:obj/kernel/init/ini.c:ini_parse_file(FILE* file, ini_handler handler, void* user)
0000000000109d2d:obj/kernel/init/ini.c:ini_parse(const char* data, ini_handler handler, void* user)
0000000000109ddc:obj/kernel/init/ini.c:ini_parse_string(void)
0000000000109fcc:obj/drivers/hal/storage/storage.c:init_storage(void)
000000000010a01f:obj/drivers/hal/storage/storage.c:check_fs_types(void)
000000000010a08e:obj/drivers/hal/storage/storage.c:list_devices(void)
000000000010a214:obj/drivers/hal/storage/storage.c:print_fs_type(storage_devs[i].file_system)
000000000010a276:obj/drivers/hal/storage/storage.c:add_device(pci_storage_device dev)
000000000010a2fd:obj/drivers/hal/storage/storage.c:get_primary_dev(void)
000000000010a307:obj/drivers/hal/storage/storage.c:set_primary_dev(int dev)
000000000010a3d4:obj/drivers/hal/storage/storage.c:secondary_storage_read(uint32 sector, uint8 *buffer, uint32 sector_count)
000000000010a3fc:obj/drivers/hal/storage/storage.c:secondary_storage_write(uint32 sector, uint8 *buffer, uint32 sector_count)
000000000010a438:obj/drivers/hal/storage/storage.c:get_current_drive_sector_count(void)
000000000010a47d:obj/drivers/hal/storage/storage.c:write_iso_to_disk(uint8_t *iso_buffer, uint32_t iso_size)
000000000010a52d:obj/drivers/hal/storage/storage.c:install_athenx(void)
000000000010a54b:obj/drivers/hal/storage/storage.c:check_iso_bootable(uint8_t *iso_buffer, uint32_t iso_size)
000000000010a593:obj/drivers/hal/storage/storage.c:install_mbr(void)
000000000010a6bd:obj/drivers/hal/storage/storage.c:install_iso_to_disk(void)
000000000010a8a1:obj/drivers/virtual/devices.c:handle_virtual_device_fopen(char *device, char *mods)
000000000010a99e:obj/drivers/virtual/devices.c:is_virtual_device_path(char *path)
000000000010a9cb:obj/drivers/virtual/devices.c:is_virtual_device(void *device)
000000000010a9e9:obj/drivers/virtual/devices.c:decode_device(char *path)
000000000010abed:obj/drivers/virtual/devices.c:device_read(void *ptr, size_t size, size_t nmemb, void *stream)
000000000010ac3b:obj/drivers/virtual/devices.c:device_write(const void *ptr, size_t size, size_t nmemb, void *stream)
000000000010ac8a:obj/drivers/virtual/devices.c:write_tty(char *buf,int pos,size_t count)
000000000010acca:obj/drivers/virtual/devices.c:read_tty(char *buf, int pos, size_t count)
000000000010ad50:obj/drivers/virtual/devices.c:write_fmb(char *buf,int pos,size_t count)
000000000010ad6f:obj/drivers/virtual/devices.c:read_fmb(char *buf,int pos,size_t count)
000000000010ad79:obj/drivers/virtual/devices.c:write_ttySO(char *buf,int pos,size_t count)
000000000010adb1:obj/drivers/virtual/devices.c:read_ttySO(char *buf,int pos,size_t count)
000000000010adbb:obj/drivers/virtual/devices.c:read_mem(char *buf,int pos,size_t count)
000000000010adc1:obj/drivers/virtual/devices.c:write_NULL(char *buf,int pos,size_t count)
000000000010adc7:obj/drivers/time/timer.c:timer_set_frequency(uint16 f)
000000000010ae2e:obj/drivers/time/timer.c:timer_handler(REGISTERS* r)
000000000010aed8:obj/drivers/time/timer.c:timer_register_function(TIMER_FUNCTION function, TIMER_FUNC_ARGS *args)
000000000010af57:obj/drivers/time/timer.c:timer_init(void)
000000000010af84:obj/drivers/time/timer.c:sleep(int sec)
000000000010afb2:obj/drivers/time/timer.c:get_ticks(void)
000000000010afbc:obj/drivers/time/timer.c:get_RTC_register(int reg)
000000000010aff3:obj/drivers/time/clock.c:print_date(void)
000000000010b1c9:obj/drivers/time/clock.c:print_date_com(void)
000000000010b3a7:obj/drivers/time/clock.c:get_time(void)
000000000010b553:obj/drivers/time/clock.c:time(time_t *t)
000000000010b5c0:obj/drivers/time/clock.c:localtime(const time_t *timer)
000000000010b7ad:obj/drivers/keyboard/keyboard.c:alternate_chars(char ch)
000000000010b874:obj/drivers/keyboard/keyboard.c:keyboard_handler(REGISTERS *r)
000000000010bc07:obj/drivers/keyboard/keyboard.c:kb_getchar_w(void)
000000000010bc3c:obj/drivers/keyboard/keyboard.c:get_char(int caller_process_id)
000000000010bc62:obj/drivers/keyboard/keyboard.c:lock_kb_input(int caller_process_id)
000000000010bc70:obj/drivers/keyboard/keyboard.c:unlock_kb_input(void)
000000000010bc80:obj/drivers/keyboard/keyboard.c:keyboard_init(void)
000000000010bca0:obj/drivers/keyboard/keyboard.c:handle_F1_press(scancode)
000000000010bcbc:obj/drivers/keyboard/keyboard.c:handle_F2_press(scancode)
000000000010bcc2:obj/drivers/keyboard/keyboard.c:handle_F3_press(scancode)
000000000010bcde:obj/drivers/keyboard/keyboard.c:handle_F4_press(scancode)
000000000010bcfa:obj/drivers/keyboard/keyboard.c:handle_F5_press(scancode)
000000000010bd16:obj/drivers/keyboard/keyboard.c:handle_F6_press(scancode)
000000000010bd32:obj/drivers/keyboard/keyboard.c:handle_F7_press(scancode)
000000000010bd4e:obj/drivers/keyboard/keyboard.c:handle_F8_press(scancode)
000000000010bd6a:obj/drivers/keyboard/keyboard.c:handle_F9_press(scancode)
000000000010bd86:obj/drivers/keyboard/keyboard.c:handle_F10_press(scancode)
000000000010bda2:obj/drivers/keyboard/keyboard.c:handle_F11_press(scancode)
000000000010bdbe:obj/drivers/keyboard/keyboard.c:handle_F12_press(scancode)
000000000010bdda:obj/drivers/keyboard/keyboard.c:register_arrow_callback(int scancode, arrow_callback_t callback)
000000000010be07:obj/drivers/keyboard/keyboard.c:arrow_press(SCAN_CODE_KEY_UP)
000000000010be39:obj/drivers/vga/vga.c:print_char_at(char character, uint8_t color, int x, int y)
000000000010be92:obj/drivers/vga/vga.c:print_char(char character, uint8_t color)
000000000010becc:obj/drivers/vga/vga.c:kprints(const char *string)
000000000010bf5b:obj/drivers/net/utils.c:is_little_endian(void)
000000000010bf77:obj/drivers/net/utils.c:htons(uint16_t hostshort)
000000000010bfa8:obj/drivers/net/utils.c:htonl(uint32_t hostlong)
000000000010bfe5:obj/drivers/net/utils.c:ntohs(uint16_t netshort)
000000000010c001:obj/drivers/net/utils.c:ntohl(uint32_t netlong)
000000000010c011:obj/drivers/net/utils.c:calculate_checksum(uint16_t *buf, int nwords)
000000000010c06b:obj/drivers/net/stack/dhcp.c:create_dhcp_discover(uint8_t *packet, uint8_t *src_mac)
000000000010c331:obj/drivers/net/stack/receive.c:process_received_packet(void)
000000000010c8cb:obj/drivers/net/stack/receive.c:wait_for_receive(int packet_type)
000000000010c933:obj/drivers/net/stack/send.c:send_dhcp_request(void)
000000000010c988:obj/drivers/net/network.c:print_mac_address(uint8_t mac[6])
000000000010c9f5:obj/drivers/net/network.c:request_ip_and_wait(int dev)
000000000010cc5d:obj/drivers/net/network.c:set_current_netdev(network_interface_t *iface)
000000000010cc6b:obj/drivers/net/network.c:get_current_netdev(void)
000000000010cc75:obj/drivers/net/network.c:register_iface(network_interface_t* iface, char iface_name[100], int (*transmit_func)
000000000010cd1f:obj/drivers/net/network.c:print_all_network_devs(void)
000000000010cd66:obj/drivers/net/e1000/e1000.c:e1000_Get_Mac(void)
000000000010cde5:obj/drivers/net/e1000/e1000.c:e100_malloc(size_t size)
000000000010cf6a:obj/drivers/net/e1000/e1000.c:_e1000_tx_init(void)
000000000010d005:obj/drivers/net/e1000/e1000.c:_e1000_rx_init(void)
000000000010d094:obj/drivers/net/e1000/e1000.c:e1000_receive(char* buffer, uint32_t size)
000000000010d173:obj/drivers/net/e1000/e1000.c:e1000_transmit(char* buffer, uint32_t size)
000000000010d282:obj/drivers/net/e1000/e1000.c:e1000_callback(REGISTERS* r)
000000000010d2c0:obj/drivers/net/e1000/e1000.c:init_e1000(void)
000000000010d43c:obj/drivers/net/e1000/e1000.c:setup_net_e1000(void)
000000000010d644:obj/drivers/pci/pci_io.c:enable_bus_mastering(uint8_t bus, uint8_t slot, uint8_t func)
000000000010d6a6:obj/drivers/pci/pci_io.c:init_pci_device(uint8_t bus, uint8_t slot, uint8_t func)
000000000010d759:obj/drivers/pci/pci_io.c:pci_enable_device_busmaster(uint16_t bus, uint16_t slot, uint16_t function)
000000000010d7fa:obj/drivers/pci/pci_io.c:init_pci_device_interrupts(uint8_t bus, uint8_t slot, uint8_t func)
000000000010d85d:obj/drivers/pci/pci_io.c:pci_config_read_dword(uint8_t bus, uint8_t slot, uint8_t func, uint8_t offset)
000000000010d8f1:obj/drivers/pci/pci_io.c:pci_config_read_word(uint8_t bus, uint8_t slot, uint8_t func, uint8_t offset)
000000000010d94f:obj/drivers/pci/pci_io.c:pci_read(uint8_t bus, uint8_t device, uint8_t function, uint8_t offset)
000000000010d9c4:obj/drivers/pci/pci_io.c:pci_write(bus, slot, func, 0x06, command)
000000000010da3d:obj/drivers/pci/pci_io.c:pci_read_mini(uint8_t bus, uint8_t device, uint8_t function, uint8_t offset)
000000000010dab2:obj/drivers/pci/pci_io.c:found_device(bus, slot, func, &device)
000000000010de90:obj/drivers/pci/pci_mian.c:pci_scan(void)
000000000010df84:obj/drivers/pci/pci_mian.c:create_device(&dev)
000000000010e2f9:obj/drivers/pci/pci_mian.c:is_ahci(config)
000000000010e310:obj/drivers/pci/pci_mian.c:get_ahci_abar(void)
000000000010e3e6:obj/drivers/pci/pci_mian.c:get_e1000_data(void)
000000000010e528:obj/drivers/pci/pci_mian.c:read_bar5(uint8_t bus, uint8_t slot, uint8_t func)
000000000010e55b:obj/drivers/pci/pci_mian.c:get_num_unclassified_devices(void)
000000000010e565:obj/drivers/pci/pci_mian.c:get_num_mass_storage_devices(void)
000000000010e56f:obj/drivers/pci/pci_mian.c:get_num_network_devices(void)
000000000010e579:obj/drivers/pci/pci_mian.c:get_num_display_devices(void)
000000000010e583:obj/drivers/pci/pci_mian.c:get_num_multimedia_devices(void)
000000000010e58d:obj/drivers/pci/pci_mian.c:get_num_memory_devices(void)
000000000010e597:obj/drivers/pci/pci_mian.c:get_num_bridge_devices(void)
000000000010e5a1:obj/drivers/pci/pci_mian.c:get_num_simple_comm_devices(void)
000000000010e5ab:obj/drivers/pci/pci_mian.c:get_num_base_system_periph_devices(void)
000000000010e5b5:obj/drivers/pci/pci_mian.c:get_num_input_devices(void)
000000000010e5bf:obj/drivers/pci/pci_mian.c:get_num_docking_devices(void)
000000000010e5c9:obj/drivers/pci/pci_mian.c:get_num_processor_devices(void)
000000000010e5d3:obj/drivers/pci/pci_mian.c:get_num_serial_bus_devices(void)
000000000010e5dd:obj/drivers/pci/pci_mian.c:get_num_wireless_devices(void)
000000000010e5e7:obj/drivers/pci/pci_mian.c:get_num_intelligent_io_devices(void)
000000000010e5f1:obj/drivers/pci/pci_mian.c:get_num_satellite_devices(void)
000000000010e5fb:obj/drivers/pci/pci_mian.c:get_num_encryption_devices(void)
000000000010e605:obj/drivers/pci/pci_mian.c:get_num_signal_processing_devices(void)
000000000010e60f:obj/drivers/pci/pci_mian.c:get_num_processing_accel_devices(void)
000000000010e619:obj/drivers/pci/pci_mian.c:get_num_non_essential_devices(void)
000000000010e623:obj/drivers/pci/pci_mian.c:get_num_coprocessor_devices(void)
000000000010e62d:obj/drivers/pci/pci_mian.c:remap_irq(pci_config_register *info, int irq)
000000000010e73f:obj/drivers/terminal/terminal.c:get_font_fg(void)
000000000010e749:obj/drivers/terminal/terminal.c:get_font_bg(void)
000000000010e753:obj/drivers/terminal/terminal.c:set_font_fg_color(int color_index)
000000000010e879:obj/drivers/terminal/terminal.c:set_font_bg_color(int color_index)
000000000010e99c:obj/drivers/terminal/terminal.c:init_terminal(int x, int y)
000000000010ea12:obj/drivers/terminal/terminal.c:get_terminal_postion_x(void)
000000000010ea1c:obj/drivers/terminal/terminal.c:get_terminal_postion_y(void)
000000000010ea26:obj/drivers/terminal/terminal.c:set_terminal_postion_x(int x)
000000000010ea34:obj/drivers/terminal/terminal.c:set_terminal_postion_y(int y)
000000000010ea42:obj/drivers/terminal/terminal.c:draw_vbe_char(char c)
000000000010ebd9:obj/drivers/terminal/terminal.c:draw_char_8x16(terminal_postion_x, terminal_postion_y, c)
000000000010ed16:obj/drivers/terminal/terminal.c:scroll_up(void)
000000000010ed47:obj/drivers/terminal/terminal.c:scroll_down(void)
000000000010ed63:obj/drivers/terminal/terminal.c:reset_poss_from_scroll(void)
000000000010ed9b:obj/drivers/terminal/terminal.c:reset_terminal_settings(void)
000000000010edd9:obj/drivers/terminal/graphics.c:draw_loading_bar(int current_value, int total_value, int x, int y, uint32_t color, int distance_between_bars)
000000000010eee6:obj/drivers/acpi/acpi.c:acpiCheckRSDPtr(unsigned int *ptr)
000000000010ef51:obj/drivers/acpi/acpi.c:acpiGetRSDPtr(void)
000000000010efe3:obj/drivers/acpi/acpi.c:acpiCheckHeader(unsigned int *ptr, char *sig)
000000000010f04d:obj/drivers/acpi/acpi.c:acpiEnable(void)
000000000010f1b2:obj/drivers/acpi/acpi.c:initAcpi(void)
000000000010f478:obj/drivers/acpi/acpi.c:acpiPowerOff(void)
000000000010f4fd:obj/drivers/acpi/acpi.c:reboot(void)
000000000010f516:obj/drivers/acpi/acpi.c:findFACP(void)
000000000010f58d:obj/drivers/vesa/vesa.c:get_vbe_info(void)
000000000010f688:obj/drivers/vesa/vesa.c:get_vbe_mode_info(uint16 mode, VBE20_MODEINFOBLOCK *mode_info)
000000000010f717:obj/drivers/vesa/vesa.c:vbe_set_mode(uint32 mode)
000000000010f780:obj/drivers/vesa/vesa.c:vbe_find_mode(uint32 width, uint32 height, uint32 bpp)
000000000010f830:obj/drivers/vesa/vesa.c:vbe_print_available_modes(void)
000000000010f8c9:obj/drivers/vesa/vesa.c:vbe_rgb(uint8 red, uint8 green, uint8 blue)
000000000010f902:obj/drivers/vesa/vesa.c:get_vbe_loaction(int x, int y)
000000000010f917:obj/drivers/vesa/vesa.c:vbe_putpixel(int x, int y, int color)
000000000010f945:obj/drivers/vesa/vesa.c:vesa_init(uint32 width, uint32 height, uint32 bpp)
000000000010fa5b:obj/drivers/vesa/vesa.c:map_vesa(void)
000000000010fb14:obj/drivers/vesa/vesa.c:test_memory_mapping(uint32_t start_address, uint32_t size)
000000000010fb6f:obj/drivers/vesa/vesa.c:leave_vesa_mode(void)
000000000010fb98:obj/drivers/vesa/vesa.c:vesa_scroll(int lines)
000000000010fbed:obj/drivers/vesa/vesa.c:debug_scroll(int lines)
000000000010fc44:obj/drivers/vesa/vesa.c:scroll_screen(lines)
000000000010fcb7:obj/drivers/vesa/vesa.c:scroll_screen_history(g_vbe_buffer,g_width,g_height,lines)
000000000010febd:obj/drivers/vesa/vesa.c:vesa_init_buffers(void)
000000000010ff6a:obj/drivers/vesa/vesa.c:draw_pixel_buffer_1(int x, int y, int color)
000000000010ffa9:obj/drivers/vesa/vesa.c:draw_pixel_buffer_1_tty(uint32_t pos,int count,uint32_t *buffer)
000000000011000b:obj/drivers/vesa/vesa.c:draw_pixel_buffer_2(int x, int y, int color)
000000000011004a:obj/drivers/vesa/vesa.c:cycle_buffers_vbe(void)
000000000011014c:obj/drivers/vesa/vesa.c:update_pixel_display(void)
00000000001101cd:obj/drivers/vesa/vesa.c:update_pixel(int x, int y)
000000000011024e:obj/drivers/vesa/vesa.c:clear_screen(void)
00000000001102d5:obj/drivers/io/stream.c:init_io_system(void)
0000000000110336:obj/drivers/io/stream.c:getchar(void)
0000000000110389:obj/drivers/io/stream.c:get_io_pos(void)
000000000011039f:obj/drivers/io/stream.c:set_io_pos(int pos)
00000000001103d4:obj/drivers/io/stream.c:push_io(int c)
0000000000110426:obj/drivers/io/stream.c:disable_io_stream(void)
0000000000110433:obj/drivers/io/stream.c:enable_io_stream(void)
000000000011199c:obj/drivers/io/scanf.c:vscanf_(const char *format, va_list arg)
00000000001119c1:obj/drivers/io/scanf.c:scanf_(const char *format, ...)
00000000001119e7:obj/drivers/io/scanf.c:vspscanf_(const char **sp, const char *format, va_list arg)
0000000000111a1d:obj/drivers/io/scanf.c:spscanf_(const char **sp, const char *format, ...)
0000000000111a46:obj/drivers/io/scanf.c:vsscanf_(const char *s, const char *format, va_list arg)
0000000000111a6a:obj/drivers/io/scanf.c:sscanf_(const char *s, const char *format, ...)
0000000000111a93:obj/drivers/io/scanf.c:vfctscanf_(int (*getch)
0000000000111ab5:obj/drivers/io/scanf.c:fctscanf_(int (*getch)
0000000000111ae4:obj/drivers/io/scanf.c:getch_(void)
0000000000111b80:obj/drivers/io/scanf.c:aquire_stdin_lock(int id)
0000000000111b86:obj/drivers/io/scanf.c:release_stdin_lock(int id)
0000000000111b8c:obj/drivers/io/scanf.c:ungetch_(c)
0000000000111ba9:obj/drivers/io/scanf.c:enable_echo(void)
0000000000111bb9:obj/drivers/io/scanf.c:disable_echo(void)
0000000000111bc9:obj/drivers/io/scanf.c:set_echo_char(char ch)
0000000000111d83:obj/drivers/VFS/fs.c:init_file_system(int drive)
0000000000111e2f:obj/drivers/VFS/fs.c:try_fat(void)
0000000000111e66:obj/drivers/VFS/fs.c:try_ext(void)
0000000000112012:obj/drivers/VFS/file.c:init_fs(void)
00000000001120c4:obj/drivers/VFS/file.c:remove_double_path_separators(char* path)
00000000001121bf:obj/drivers/VFS/file.c:chdir(const char *path)
00000000001123b9:obj/drivers/VFS/file.c:getcwd(void)
00000000001123f2:obj/drivers/VFS/file.c:is_valid_char(char c)
000000000011242c:obj/drivers/VFS/file.c:filter_cwd(char* cwd)
00000000001124dc:obj/drivers/VFS/file.c:remove_leading_whitespace(char* path)
000000000011252d:obj/drivers/VFS/file.c:process_path(const char* input_string)
0000000000112683:obj/drivers/VFS/file.c:fopen(const char *path,const char *modifiers)
00000000001127d2:obj/drivers/VFS/file.c:fread(void *ptr, size_t size, size_t nmemb, void *stream)
0000000000112887:obj/drivers/VFS/file.c:fwrite(const void *ptr, size_t size, size_t nmemb, void *stream)
0000000000112997:obj/drivers/VFS/file.c:fputc(int c, void *stream)
0000000000112a1e:obj/drivers/VFS/file.c:fputs(const char *str, void *stream)
0000000000112b03:obj/drivers/VFS/file.c:fclose(void *stream)
0000000000112c08:obj/drivers/VFS/file.c:fseek(void *stream, long offset, int whence)
0000000000112ca9:obj/drivers/VFS/file.c:fgetpos(void *stream, fpos_t *pos)
0000000000112cd7:obj/drivers/VFS/file.c:ftell(stream)
0000000000112d15:obj/drivers/VFS/file.c:feof(void *stream)
0000000000112d40:obj/drivers/VFS/file.c:fgets(char *s, int n, void *f)
0000000000112e44:obj/drivers/VFS/file.c:fgetc(void *f)
0000000000112e99:obj/drivers/VFS/file.c:mkdir(const char *path)
0000000000112ec4:obj/drivers/VFS/file.c:rmdir(const char *path)
0000000000112ee3:obj/drivers/VFS/file.c:fprintf(void *fp,const char *format,...)
0000000000112fd9:obj/drivers/VFS/file.c:ungetc(int c,void *stream)
0000000000113026:obj/drivers/VFS/file.c:fflush(void *stream)
0000000000113051:obj/drivers/VFS/file.c:fs_shutdown(void)
00000000001130a9:obj/drivers/fs/fat32/fat_access.c:fatfs_init(struct fatfs *fs)
0000000000113646:obj/drivers/fs/fat32/fat_access.c:fatfs_lba_of_cluster(struct fatfs *fs, uint32 Cluster_Number)
00000000001136a2:obj/drivers/fs/fat32/fat_access.c:fatfs_sector_read(struct fatfs *fs, uint32 lba, uint8 *target, uint32 count)
00000000001136c1:obj/drivers/fs/fat32/fat_access.c:fatfs_sector_write(struct fatfs *fs, uint32 lba, uint8 *target, uint32 count)
00000000001136e0:obj/drivers/fs/fat32/fat_access.c:fatfs_sector_reader(struct fatfs *fs, uint32 start_cluster, uint32 offset, uint8 *target)
0000000000113821:obj/drivers/fs/fat32/fat_access.c:fatfs_read_sector(struct fatfs *fs, uint32 cluster, uint32 sector, uint8 *target)
0000000000113935:obj/drivers/fs/fat32/fat_access.c:fatfs_write_sector(struct fatfs *fs, uint32 cluster, uint32 sector, uint8 *target)
0000000000113a5d:obj/drivers/fs/fat32/fat_access.c:fatfs_show_details(struct fatfs *fs)
0000000000113afd:obj/drivers/fs/fat32/fat_access.c:fatfs_get_root_cluster(struct fatfs *fs)
0000000000113b08:obj/drivers/fs/fat32/fat_access.c:fatfs_get_file_entry(struct fatfs *fs, uint32 Cluster, char *name_to_find, struct fat_dir_entry *sfEntry)
0000000000113d9d:obj/drivers/fs/fat32/fat_access.c:fatfs_sfn_exists(struct fatfs *fs, uint32 Cluster, char *shortname)
0000000000113e68:obj/drivers/fs/fat32/fat_access.c:fatfs_update_timestamps(struct fat_dir_entry *directoryEntry, int create, int modify, int access)
0000000000113fa0:obj/drivers/fs/fat32/fat_access.c:fatfs_update_file_length(struct fatfs *fs, uint32 Cluster, char *shortname, uint32 fileLength)
00000000001140e1:obj/drivers/fs/fat32/fat_access.c:fatfs_mark_file_deleted(struct fatfs *fs, uint32 Cluster, char *shortname)
000000000011421f:obj/drivers/fs/fat32/fat_access.c:fatfs_list_directory_start(struct fatfs *fs, struct fs_dir_list_status *dirls, uint32 StartCluster)
000000000011423e:obj/drivers/fs/fat32/fat_access.c:fatfs_list_directory_next(struct fatfs *fs, struct fs_dir_list_status *dirls, struct fs_dir_ent *entry)
00000000001155a0:obj/drivers/fs/fat32/fat_filelib.c:fl_init(void)
0000000000115604:obj/drivers/fs/fat32/fat_filelib.c:fl_attach_locks(void (*lock)
000000000011561a:obj/drivers/fs/fat32/fat_filelib.c:fl_attach_media(fn_diskio_read rd, fn_diskio_write wr)
0000000000115685:obj/drivers/fs/fat32/fat_filelib.c:fl_shutdown(void)
00000000001156cc:obj/drivers/fs/fat32/fat_filelib.c:fl_fopen(const char *path, const char *mode)
0000000000115ae0:obj/drivers/fs/fat32/fat_filelib.c:fl_fflush(void *f)
0000000000115b66:obj/drivers/fs/fat32/fat_filelib.c:fl_fclose(void *f)
0000000000115c56:obj/drivers/fs/fat32/fat_filelib.c:fl_fgetc(void *f)
0000000000115c8a:obj/drivers/fs/fat32/fat_filelib.c:fl_fgets(char *s, int n, void *f)
0000000000115d05:obj/drivers/fs/fat32/fat_filelib.c:fl_fread(&data, 1, 1, f)
0000000000115f24:obj/drivers/fs/fat32/fat_filelib.c:fl_fseek(void *f, long offset, int origin)
0000000000116074:obj/drivers/fs/fat32/fat_filelib.c:fl_fgetpos(void *f , uint32 * position)
00000000001160bf:obj/drivers/fs/fat32/fat_filelib.c:fl_ftell(void *f)
00000000001160e3:obj/drivers/fs/fat32/fat_filelib.c:fl_feof(void *f)
0000000000116141:obj/drivers/fs/fat32/fat_filelib.c:fl_fputc(int c, void *f)
0000000000116173:obj/drivers/fs/fat32/fat_filelib.c:fl_fwrite(&data, 1, 1, f)
0000000000116440:obj/drivers/fs/fat32/fat_filelib.c:fl_fputs(const char * str, void *f)
000000000011647f:obj/drivers/fs/fat32/fat_filelib.c:fl_remove(const char * filename)
0000000000116521:obj/drivers/fs/fat32/fat_filelib.c:fl_createdirectory(const char *path)
000000000011656b:obj/drivers/fs/fat32/fat_filelib.c:fl_listdirectory(const char *path, Entry dirs[MAX], Entry files[MAX], int *dir_count, int *file_count)
00000000001166ec:obj/drivers/fs/fat32/fat_filelib.c:fl_count_files(const char *path, int *dir_count, int *file_count)
000000000011678b:obj/drivers/fs/fat32/fat_filelib.c:fl_populate_file_list(const char *path, Entry *files, int *file_count)
000000000011685a:obj/drivers/fs/fat32/fat_filelib.c:fl_opendir(path, &dirstat)
0000000000116911:obj/drivers/fs/fat32/fat_filelib.c:fl_readdir(&dirstat, &dirent)
0000000000116979:obj/drivers/fs/fat32/fat_filelib.c:fl_closedir(&dirstat)
0000000000116983:obj/drivers/fs/fat32/fat_filelib.c:fl_is_dir(const char *path)
00000000001169d4:obj/drivers/fs/fat32/fat_filelib.c:fl_format(uint32 volume_sectors, const char *name)
00000000001169f2:obj/drivers/fs/fat32/fat_filelib.c:ferror(FL_FILE *stream)
00000000001169fc:obj/drivers/fs/fat32/fat_filelib.c:fatfs_add_special_entries(&_fs, file->startcluster, file->parentcluster)
0000000000116af4:obj/drivers/fs/fat32/fat_filelib.c:get_file_size(FL_FILE *file)
0000000000116bd4:obj/drivers/fs/fat32/fat_filelib.c:is_file(const char *path)
0000000000116c04:obj/drivers/fs/fat32/fat_filelib.c:rename(const char* old_name, const char* new_name)
0000000000116cc5:obj/drivers/fs/fat32/fat_filelib.c:fat_inited(void)
0000000000116e71:obj/drivers/fs/fat32/fat_cache.c:fatfs_cache_init(struct fatfs *fs, FL_FILE *file)
0000000000116e7b:obj/drivers/fs/fat32/fat_cache.c:fatfs_cache_get_next_cluster(struct fatfs *fs, FL_FILE *file, uint32 clusterIdx, uint32 *pNextCluster)
0000000000116e85:obj/drivers/fs/fat32/fat_cache.c:fatfs_cache_set_next_cluster(struct fatfs *fs, FL_FILE *file, uint32 clusterIdx, uint32 nextCluster)
0000000000116e8f:obj/drivers/fs/fat32/fat_table.c:fatfs_fat_init(struct fatfs *fs)
0000000000117178:obj/drivers/fs/fat32/fat_table.c:fatfs_fat_purge(struct fatfs *fs)
00000000001171ce:obj/drivers/fs/fat32/fat_table.c:fatfs_find_next_cluster(struct fatfs *fs, uint32 current_cluster)
0000000000117358:obj/drivers/fs/fat32/fat_table.c:fatfs_set_fs_info_next_free_cluster(struct fatfs *fs, uint32 newValue)
0000000000117452:obj/drivers/fs/fat32/fat_table.c:fatfs_find_blank_cluster(struct fatfs *fs, uint32 start_cluster, uint32 *free_cluster)
00000000001175d3:obj/drivers/fs/fat32/fat_table.c:fatfs_fat_set_cluster(struct fatfs *fs, uint32 cluster, uint32 next_cluster)
0000000000117726:obj/drivers/fs/fat32/fat_table.c:fatfs_free_cluster_chain(struct fatfs *fs, uint32 start_cluster)
0000000000117774:obj/drivers/fs/fat32/fat_table.c:fatfs_fat_add_cluster_to_chain(struct fatfs *fs, uint32 start_cluster, uint32 newEntry)
00000000001177ef:obj/drivers/fs/fat32/fat_table.c:fatfs_count_free_clusters(struct fatfs *fs)
0000000000117938:obj/drivers/fs/fat32/fat_write.c:fatfs_add_free_space(struct fatfs *fs, uint32 *startCluster, uint32 clusters)
00000000001179e0:obj/drivers/fs/fat32/fat_write.c:fatfs_allocate_free_space(struct fatfs *fs, int newFile, uint32 *startCluster, uint32 size)
0000000000117cf8:obj/drivers/fs/fat32/fat_write.c:fatfs_add_file_entry(struct fatfs *fs, uint32 dirCluster, char *filename, char *shortfilename, uint32 startCluster, uint32 size, int dir)
0000000000117f40:obj/drivers/fs/fat32/fat_string.c:fatfs_total_path_levels(char *path)
0000000000117fd0:obj/drivers/fs/fat32/fat_string.c:fatfs_get_substring(char *path, int levelreq, char *output, int max_len)
00000000001180d5:obj/drivers/fs/fat32/fat_string.c:fatfs_split_path(char *full_path, char *path, int max_path, char *filename, int max_filename)
000000000011829b:obj/drivers/fs/fat32/fat_string.c:fatfs_compare_names(char* strA, char* strB)
0000000000118408:obj/drivers/fs/fat32/fat_string.c:fatfs_string_ends_with_slash(char *path)
0000000000118450:obj/drivers/fs/fat32/fat_string.c:fatfs_get_sfn_display_name(char* out, char* in)
00000000001184bc:obj/drivers/fs/fat32/fat_string.c:fatfs_get_extension(char* filename, char* out, int maxlen)
0000000000118555:obj/drivers/fs/fat32/fat_string.c:fatfs_create_path_string(char* path, char *filename, char* out, int maxlen)
0000000000118ecf:obj/drivers/fs/fat32/fat_format.c:fatfs_format_fat16(struct fatfs *fs, uint32 volume_sectors, const char *name)
0000000000119050:obj/drivers/fs/fat32/fat_format.c:fatfs_format_fat32(struct fatfs *fs, uint32 volume_sectors, const char *name)
00000000001191b4:obj/drivers/fs/fat32/fat_format.c:fatfs_format(struct fatfs *fs, uint32 volume_sectors, const char *name)
00000000001191ef:obj/drivers/fs/fat32/fat_misc.c:fatfs_lfn_cache_init(struct lfn_cache *lfn, int wipeTable)
0000000000119245:obj/drivers/fs/fat32/fat_misc.c:fatfs_lfn_cache_entry(struct lfn_cache *lfn, uint8 *entryBuffer)
00000000001194b1:obj/drivers/fs/fat32/fat_misc.c:fatfs_lfn_cache_get(struct lfn_cache *lfn)
0000000000119509:obj/drivers/fs/fat32/fat_misc.c:fatfs_entry_lfn_text(struct fat_dir_entry *entry)
000000000011952c:obj/drivers/fs/fat32/fat_misc.c:fatfs_entry_lfn_invalid(struct fat_dir_entry *entry)
000000000011956d:obj/drivers/fs/fat32/fat_misc.c:fatfs_entry_lfn_exists(struct lfn_cache *lfn, struct fat_dir_entry *entry)
00000000001195c7:obj/drivers/fs/fat32/fat_misc.c:fatfs_entry_sfn_only(struct fat_dir_entry *entry)
0000000000119613:obj/drivers/fs/fat32/fat_misc.c:fatfs_entry_is_dir(struct fat_dir_entry *entry)
0000000000119635:obj/drivers/fs/fat32/fat_misc.c:fatfs_entry_is_file(struct fat_dir_entry *entry)
0000000000119657:obj/drivers/fs/fat32/fat_misc.c:fatfs_lfn_entries_required(char *filename)
0000000000119698:obj/drivers/fs/fat32/fat_misc.c:fatfs_filename_to_lfn(char *filename, uint8 *buffer, int entry, uint8 sfnChk)
0000000000119806:obj/drivers/fs/fat32/fat_misc.c:fatfs_sfn_create_entry(char *shortfilename, uint32 size, uint32 startCluster, struct fat_dir_entry *entry, int dir)
00000000001198d3:obj/drivers/fs/fat32/fat_misc.c:fatfs_lfn_create_sfn(char *sfn_output, char *filename)
0000000000119b57:obj/drivers/fs/fat32/fat_misc.c:fatfs_lfn_generate_tail(char *sfn_output, char *sfn_input, uint32 tailNum)
0000000000119be8:obj/drivers/fs/fat32/fat_misc.c:fatfs_convert_from_fat_time(uint16 fat_time, int *hours, int *minutes, int *seconds)
0000000000119c3d:obj/drivers/fs/fat32/fat_misc.c:fatfs_convert_from_fat_date(uint16 fat_date, int *day, int *month, int *year)
0000000000119c95:obj/drivers/fs/fat32/fat_misc.c:fatfs_convert_to_fat_time(int hours, int minutes, int seconds)
0000000000119ce8:obj/drivers/fs/fat32/fat_misc.c:fatfs_convert_to_fat_date(int day, int month, int year)
0000000000119d3c:obj/drivers/disk/ahci/ahci_main.c:select_ahci_drive(int index)
0000000000119d6c:obj/drivers/disk/ahci/ahci_main.c:ahci_write_sector_hal(uint32 sector, uint8 *buffer, uint32 sector_count)
0000000000119dbd:obj/drivers/disk/ahci/ahci_main.c:ahci_read_sector_hal(uint32 sector, uint8 *buffer, uint32 sector_count)
0000000000119e0e:obj/drivers/disk/ahci/ahci_main.c:add_ahci_drive(HBA_PORT *dev)
0000000000119e86:obj/drivers/disk/ahci/ahci_main.c:ahci_malloc(size_t size, size_t alignment,int line,char msg[1200])
0000000000119eeb:obj/drivers/disk/ahci/ahci_main.c:reset_ahci_controller(HBA_MEM *abar)
0000000000119f28:obj/drivers/disk/ahci/ahci_main.c:ahci_isr(REGISTERS16 *reg)
0000000000119f41:obj/drivers/disk/ahci/ahci_main.c:enable_ahci_mode_and_interrupts(HBA_MEM *abar)
0000000000119f5a:obj/drivers/disk/ahci/ahci_main.c:ahci_main(void)
000000000011a13a:obj/drivers/disk/ahci/ahci_main.c:probe_port(HBA_MEM *abar)
000000000011a30d:obj/drivers/disk/ahci/ahci_main.c:port_rebase(HBA_PORT *port, int portno)
000000000011a59d:obj/drivers/disk/ahci/ahci_main.c:start_cmd(HBA_PORT *port)
000000000011a5f3:obj/drivers/disk/ahci/ahci_main.c:stop_cmd(HBA_PORT *port)
000000000011a63f:obj/drivers/disk/ahci/ahci_main.c:ahci_read_sectors(HBA_PORT *port, uint64_t start_lba, void *buf, uint32_t count)
000000000011a90a:obj/drivers/disk/ahci/ahci_main.c:ahci_write_sectors(HBA_PORT *port, uint64_t start_lba, void *buf, uint32_t count)
000000000011abd5:obj/drivers/disk/ahci/ahci_main.c:get_drive_info(HBA_PORT *port)
000000000011ad14:obj/drivers/disk/ahci/ahci_main.c:ahci_identify_device(HBA_PORT *port, IDENTIFY_DEVICE_DATA *identify_data)
000000000011ae59:obj/drivers/disk/ahci/ahci_main.c:get_ahci_sector_count(void)
000000000011ae79:obj/drivers/disk/ahci/ahci_main.c:int_get_sector_count(HBA_PORT *port)
000000000011b0ca:obj/drivers/disk/ata/ide.c:select_ide_drive(int drive_num)
000000000011b11f:obj/drivers/disk/ata/ide.c:get_drive_size(int count)
000000000011b131:obj/drivers/disk/ata/ide.c:add_ide_drive(int drive_num)
000000000011b3ea:obj/drivers/disk/ata/ide.c:insl(uint16 reg, uint32 *buffer, int quads)
000000000011b435:obj/drivers/disk/ata/ide.c:outsl(uint16 reg, uint32 *buffer, int quads)
000000000011b47c:obj/drivers/disk/ata/ide.c:ide_read_buffer(uint8 channel, uint8 reg, uint32 *buffer, uint32 quads)
000000000011b5c3:obj/drivers/disk/ata/ide.c:ide_write_buffer(uint8 channel, uint8 reg, uint32 *buffer, uint32 quads)
000000000011b70a:obj/drivers/disk/ata/ide.c:ide_polling(uint8 channel, uint8 advanced_check)
000000000011b7b0:obj/drivers/disk/ata/ide.c:ide_print_error(uint32 drive, uint8 err)
000000000011b9c0:obj/drivers/disk/ata/ide.c:ide_init(uint32 prim_channel_base_addr, uint32 prim_channel_control_base_addr,
              uint32 sec_channel_base_addr, uint32 sec_channel_control_addr,
              uint32 bus_master_addr)
000000000011bec9:obj/drivers/disk/ata/ide.c:ide_ata_access(uint8 direction, uint8 drive, uint32 lba, uint8 num_sectors, uint32 buffer)
000000000011c420:obj/drivers/disk/ata/ide.c:ide_wait_irq(void)
000000000011c439:obj/drivers/disk/ata/ide.c:ide_irq(void)
000000000011c446:obj/drivers/disk/ata/ide.c:ide_read_sectors(uint8 drive, uint8 num_sectors, uint32 lba, uint32 buffer)
000000000011c531:obj/drivers/disk/ata/ide.c:ide_write_sectors(uint8 drive, uint8 num_sectors, uint32 lba, uint32 buffer)
000000000011c61c:obj/drivers/disk/ata/ide.c:ata_init(void)
000000000011c646:obj/drivers/disk/ata/ide.c:ata_get_drive_by_model(const char *model)
000000000011c68f:obj/drivers/disk/ata/ide.c:ide_write_sectors_fat(uint32 sector, uint8 *buffer, uint32 sector_count)
000000000011c72c:obj/drivers/disk/ata/ide.c:ide_read_sectors_fat(uint32 sector, uint8 *buffer, uint32 sector_count)
000000000011c77b:obj/drivers/disk/ata/ide.c:get_sectors(int driver)
000000000011c78a:obj/drivers/disk/ata/ide.c:set_drive_num(int drive)
000000000011c798:obj/drivers/disk/ata/ide.c:get_ata_drive_num(void)
000000000011c7a2:obj/drivers/display/cursor.c:draw_cursor(int sx, int sy)
000000000011c857:obj/drivers/display/cursor.c:undraw_cursor(int sx, int sy)
000000000011c902:obj/drivers/display/cursor.c:update_cursor(void)
000000000011c999:obj/drivers/display/cursor.c:update_cursor_manual(void)
000000000011df5b:obj/drivers/display/printf.c:printf__(const char* format, ...)
000000000011df8c:obj/drivers/display/printf.c:printf(and may not be thread safe)
000000000011e0fc:obj/drivers/display/printf.c:set_color(int color_code)
000000000011e113:obj/drivers/display/printf.c:handle_ansi(const char *fmt)
000000000011e457:obj/drivers/display/printf.c:parse_ansi(buf)
000000000011e507:obj/drivers/display/printf.c:sprintf_(char* buffer, const char* format, ...)
000000000011e537:obj/drivers/display/printf.c:snprintf_(char* buffer, size_t count, const char* format, ...)
000000000011e568:obj/drivers/display/printf.c:vprintf_(const char* format, va_list va)
000000000011e58c:obj/drivers/display/printf.c:vsnprintf_(buf, 1024 * 4, format, args)
000000000011e5b0:obj/drivers/display/printf.c:fctprintf(void (*out)
000000000011e5ed:obj/drivers/display/printf.c:_putchar(character)
000000000011e695:obj/drivers/display/printf.c:set_print_mode(int mode)
000000000011e6c6:obj/libk/ctypes.c:isspace(char c)
000000000011e704:obj/libk/ctypes.c:isalpha(char c)
000000000011e736:obj/libk/ctypes.c:tolower(int c)
000000000011e752:obj/libk/ctypes.c:isdigit(int c)
000000000011e76f:obj/libk/ctypes.c:isxdigit(int c)
000000000011e7a7:obj/libk/ctypes.c:toupper(int c)
000000000011e7cc:obj/libk/ctypes.c:islower(c)
000000000011e7e9:obj/libk/ctypes.c:upper(char c)
000000000011e810:obj/libk/errno.c:perror(const char *string)
000000000011e82d:obj/libk/errno.c:strerror(int errno_val)
000000000011e96e:obj/libk/maths.c:max(double a, double b)
000000000011e9a2:obj/libk/maths.c:min(double a, double b)
000000000011e9d6:obj/libk/maths.c:log2(uint32_t x)
000000000011ea1a:obj/libk/maths.c:machine_eps(double x)
000000000011ea4c:obj/libk/maths.c:fact(uint32_t n)
000000000011ea7d:obj/libk/maths.c:abs(int n)
000000000011ea8d:obj/libk/maths.c:exp(double x)
000000000011eb1a:obj/libk/maths.c:inv_sqrt(double x)
000000000011eb95:obj/libk/maths.c:sqrt(double x)
000000000011ebbb:obj/libk/maths.c:msb(uint32_t v)
000000000011ec0a:obj/libk/maths.c:ln(double y)
000000000011eccb:obj/libk/maths.c:pow(double x, double y)
000000000011ee45:obj/libk/maths.c:log(double x, double y)
000000000011ee87:obj/libk/maths.c:log10(double x)
000000000011eeb1:obj/libk/maths.c:ipow(x, i)
000000000011eeeb:obj/libk/maths.c:sin_1st_quadrant(double x)
000000000011ef82:obj/libk/maths.c:sin(double x)
000000000011f0cd:obj/libk/maths.c:cos(double x)
000000000011f0f9:obj/libk/maths.c:tan(double x)
000000000011f12f:obj/libk/maths.c:sinh(double x)
000000000011f175:obj/libk/maths.c:cosh(double x)
000000000011f1bb:obj/libk/maths.c:tanh(double x)
000000000011f1f6:obj/libk/maths.c:asinh(double x)
000000000011f235:obj/libk/maths.c:acosh(double x)
000000000011f274:obj/libk/maths.c:atanh(double x)
000000000011f2ad:obj/libk/maths.c:asin(double x)
000000000011f384:obj/libk/maths.c:acos(double x)
000000000011f46e:obj/libk/maths.c:atan(double x)
000000000011f4b7:obj/libk/maths.c:fac(unsigned int x)
000000000011f4e2:obj/libk/maths.c:small_rand(void)
000000000011f541:obj/libk/maths.c:fabs(double x)
000000000011f56a:obj/libk/maths.c:fmax(double x, double y)
000000000011f59e:obj/libk/string.c:memset(void *dst, char c, uint32 n)
000000000011f5d0:obj/libk/string.c:strchr(const char* str, int character)
000000000011f5fd:obj/libk/string.c:strtok(char* str, const char* delimiters)
000000000011f6be:obj/libk/string.c:memmove(void* dest, const void* src, size_t size)
000000000011f74a:obj/libk/string.c:memcpy(void *dst, const void *src, uint32 n)
000000000011f78d:obj/libk/string.c:strtok_r(char* str, const char* delim, char** saveptr)
000000000011f81b:obj/libk/string.c:memcmp(const void *str1, const void *str2, size_t count)
000000000011f870:obj/libk/string.c:memcmp_string(const void *aptr, const void *bptr, size_t size)
000000000011f8e0:obj/libk/string.c:strlen(const char *s)
000000000011f908:obj/libk/string.c:strcmp(const char *s1, char *s2)
000000000011f956:obj/libk/string.c:strstr(char *s1, const char *s2)
000000000011f9a1:obj/libk/string.c:ctos(char s[2], const char c)
000000000011f9c4:obj/libk/string.c:strcpy(char *dst, const char *src)
000000000011f9fa:obj/libk/string.c:backspace(char *buffer)
000000000011fa34:obj/libk/string.c:atoi(const char *s)
000000000011fad8:obj/libk/string.c:strcat(char *dest, const char *src)
000000000011fb24:obj/libk/string.c:lower(char c)
000000000011fb4b:obj/libk/string.c:strncpy(char *dst, const char *src, size_t n)
000000000011fbaa:obj/libk/string.c:strncmp(const char *s1, const char *s2, register size_t n)
000000000011fbf9:obj/libk/string.c:itoa(char *buf, int base, int d)
000000000011fcd7:obj/libk/string.c:string_length(char s[])
000000000011fcfe:obj/libk/string.c:append(char s[], char n)
000000000011fd37:obj/libk/string.c:parse_string(char *parser, char *string, char c)
000000000011fd83:obj/libk/string.c:hex_string_to_uint16(const char* hexString, uint16_t* result)
000000000011fdf4:obj/libk/string.c:strtoul(hexString + 2, &endptr, 16)
000000000011ff81:obj/libk/string.c:isalnum(int c)
000000000011ffb9:obj/libk/string.c:strtoull(const char *str, char **endptr, int base)
0000000000120137:obj/libk/string.c:strrchr(const char* str, int ch)
0000000000120187:obj/libk/string.c:strcspn(const char* str, const char* reject)
00000000001201cf:obj/libk/string.c:strncat(char* dest, const char* src, size_t destSize)
0000000000120235:obj/libk/memory/memory.c:formatBytes(uint32_t bytes)
00000000001202ea:obj/libk/memory/memory.c:formatBytes64(uint64_t bytes)
00000000001203ab:obj/syscalls/syscall_handler.c:system_call_handler_c(int syscall_number, int param1, int param2)
0000000000120437:.//arch/i686/irq.c.s:irq_0
000000000012043e:.//arch/i686/irq.c.s:irq_1
0000000000120445:.//arch/i686/irq.c.s:irq_2
000000000012044c:.//arch/i686/irq.c.s:irq_3
0000000000120453:.//arch/i686/irq.c.s:irq_4
000000000012045a:.//arch/i686/irq.c.s:irq_5
0000000000120461:.//arch/i686/irq.c.s:irq_6
0000000000120468:.//arch/i686/irq.c.s:irq_7
000000000012046f:.//arch/i686/irq.c.s:irq_8
0000000000120476:.//arch/i686/irq.c.s:irq_9
000000000012047d:.//arch/i686/irq.c.s:irq_10
0000000000120484:.//arch/i686/irq.c.s:irq_11
000000000012048b:.//arch/i686/irq.c.s:irq_12
0000000000120495:.//arch/i686/irq.c.s:irq_13
000000000012049f:.//arch/i686/irq.c.s:irq_14
00000000001204a9:.//arch/i686/irq.c.s:irq_15
00000000001204c0:.//arch/i686/load_idt.c.s:load_idt
00000000001204d0:.//arch/i686/load_gdt.c.s:load_gdt
0000000000120500:.//arch/i686/boot.c.s:_start
0000000000120545:.//arch/i686/exception.c.s:exception_0
000000000012054c:.//arch/i686/exception.c.s:exception_1
0000000000120553:.//arch/i686/exception.c.s:exception_2
000000000012055a:.//arch/i686/exception.c.s:exception_3
0000000000120561:.//arch/i686/exception.c.s:exception_4
0000000000120568:.//arch/i686/exception.c.s:exception_5
000000000012056f:.//arch/i686/exception.c.s:exception_6
0000000000120576:.//arch/i686/exception.c.s:exception_7
000000000012057d:.//arch/i686/exception.c.s:exception_8
0000000000120582:.//arch/i686/exception.c.s:exception_9
0000000000120589:.//arch/i686/exception.c.s:exception_10
000000000012058e:.//arch/i686/exception.c.s:exception_11
0000000000120593:.//arch/i686/exception.c.s:exception_12
0000000000120598:.//arch/i686/exception.c.s:exception_13
000000000012059d:.//arch/i686/exception.c.s:exception_14
00000000001205a5:.//arch/i686/exception.c.s:exception_15
00000000001205af:.//arch/i686/exception.c.s:exception_16
00000000001205b9:.//arch/i686/exception.c.s:exception_17
00000000001205c3:.//arch/i686/exception.c.s:exception_18
00000000001205cd:.//arch/i686/exception.c.s:exception_19
00000000001205d7:.//arch/i686/exception.c.s:exception_20
00000000001205e1:.//arch/i686/exception.c.s:exception_21
00000000001205eb:.//arch/i686/exception.c.s:exception_22
00000000001205f5:.//arch/i686/exception.c.s:exception_23
00000000001205ff:.//arch/i686/exception.c.s:exception_24
0000000000120609:.//arch/i686/exception.c.s:exception_25
0000000000120613:.//arch/i686/exception.c.s:exception_26
000000000012061d:.//arch/i686/exception.c.s:exception_27
0000000000120627:.//arch/i686/exception.c.s:exception_28
0000000000120631:.//arch/i686/exception.c.s:exception_29
000000000012063b:.//arch/i686/exception.c.s:exception_30
0000000000120645:.//arch/i686/exception.c.s:exception_31
000000000012064f:.//arch/i686/exception.c.s:exception_128
0000000000120660:.//arch/i686/bios32_call.c.s:BIOS32_START
00000000001206d0:.//arch/i686/bios32_call.c.s:bios32_int_number_ptr
000000000012072b:.//arch/i686/bios32_call.c.s:bios32_gdt_entries
000000000012076b:.//arch/i686/bios32_call.c.s:bios32_gdt_ptr
0000000000120773:.//arch/i686/bios32_call.c.s:bios32_idt_ptr
000000000012077b:.//arch/i686/bios32_call.c.s:bios32_in_reg16_ptr
0000000000120797:.//arch/i686/bios32_call.c.s:bios32_out_reg16_ptr
00000000001207b5:.//arch/i686/bios32_call.c.s:BIOS32_END
00000000001207c0:.//arch/i686/sys_call.c.s:system_call_handler
0000000000120800:.//asm/pageing/page.c.s:copy_page_physical
0000000000120840:.//asm/scheduler/scheduler.c.s:SwitchToTask
0000000000120899:.//asm/scheduler/scheduler.c.s:GetCR3
0000000000125f40:.//asm/scheduler/scheduler.c.s:tab32
0000000000127000:.//asm/scheduler/scheduler.c.s:.
